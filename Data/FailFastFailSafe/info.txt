Concurrent Modification: Concurrent Modification in programming means 
to modify an object concurrently when another task is already running over it.

Iterators in java are used to iterate over the "Collection" objects.
Fail-Fast iterators immediately throw ConcurrentModificationException 
if there is structural modification of the collection. 
Structural modification means adding, removing or updating any element from collection 
while a thread is iterating over that collection. 
Iterator on ArrayList, HashMap classes are some examples of fail-fast Iterator.

Fail-Safe iterators don’t throw any exceptions if a collection is structurally modified while iterating over it. 
This is because, they operate on the "clone" of the collection, 
not on the original collection 
and that’s why they are called fail-safe iterators. 
Iterator on "CopyOnWriteArrayList", "ConcurrentHashMap" classes are examples of fail-safe Iterator.

All the collection classes in java.util package are fail-fast, 
while the collection classes in java.util.concurrent are fail-safe. 
Fail-fast iterators throw a ConcurrentModificationException, while fail-safe iterator never throws such an exception.